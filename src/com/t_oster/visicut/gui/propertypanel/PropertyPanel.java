/**
 * This file is part of VisiCut.
 * Copyright (C) 2011 - 2013 Thomas Oster <thomas.oster@rwth-aachen.de>
 * RWTH Aachen University - 52062 Aachen, Germany
 *
 *     VisiCut is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Lesser General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     VisiCut is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Lesser General Public License for more details.
 *
 *     You should have received a copy of the GNU Lesser General Public License
 *     along with VisiCut.  If not, see <http://www.gnu.org/licenses/>.
 **/
package com.t_oster.visicut.gui.propertypanel;

import com.t_oster.liblasercut.LaserProperty;
import com.t_oster.visicut.VisicutModel;
import com.t_oster.visicut.managers.LaserPropertyManager;
import com.t_oster.visicut.model.LaserDevice;
import com.t_oster.visicut.model.LaserProfile;
import com.t_oster.visicut.model.MaterialProfile;
import com.t_oster.visicut.model.Raster3dProfile;
import com.t_oster.visicut.model.RasterProfile;
import com.t_oster.visicut.model.VectorProfile;
import com.t_oster.visicut.model.mapping.Mapping;
import java.util.LinkedList;
import java.util.List;

/**
 *
 * @author Thomas Oster <thomas.oster@rwth-aachen.de>
 */
public class PropertyPanel extends javax.swing.JPanel
{

  private LaserPropertiesTableModel model;
  private List<LaserProperty> laserproperties;
  
  /**
   * Creates new form PropertyPanel
   */
  public PropertyPanel()
  {
    initComponents();
    model = new LaserPropertiesTableModel();
  }

  public void setMapping(Mapping m)
  {
    this.jLabel1.setText(m.getProfile().getName()+" settings ("+m.getFilterSet().toString()+")");
    LaserDevice ld = VisicutModel.getInstance().getSelectedLaserDevice();
    LaserProfile lp = m.getProfile();
    try
    {
      MaterialProfile mp = VisicutModel.getInstance().getMaterial();
      float thickness = VisicutModel.getInstance().getMaterialThickness();
      this.laserproperties = LaserPropertyManager.getInstance().getLaserProperties(ld, mp, lp, thickness);   
    }
    catch (Exception ex)
    {
    }
    if (this.laserproperties == null)
    {
      List<LaserProperty> props = new LinkedList<LaserProperty>();
      if (lp instanceof VectorProfile)
      {
        props.add(ld.getLaserCutter().getLaserPropertyForVectorPart());
      }
      else if (lp instanceof RasterProfile)
      {
        props.add(ld.getLaserCutter().getLaserPropertyForRasterPart());
      }
      else if (lp instanceof Raster3dProfile)
      {
        props.add(ld.getLaserCutter().getLaserPropertyForRaster3dPart());
      }
      this.laserproperties = props;
    }
    this.model.setLaserProperties(this.laserproperties);
  }
  
  public List<LaserProperty> getLaserProperties()
  {
    return laserproperties;
  }
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jLabel1 = new javax.swing.JLabel();
    editableTablePanel1 = new com.t_oster.uicomponents.EditableTablePanel();

    jLabel1.setText("Cut settings (info of current mapping):");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addContainerGap(52, Short.MAX_VALUE))
          .addComponent(editableTablePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(editableTablePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private com.t_oster.uicomponents.EditableTablePanel editableTablePanel1;
  private javax.swing.JLabel jLabel1;
  // End of variables declaration//GEN-END:variables

}
