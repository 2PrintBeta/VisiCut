/**
 * This file is part of VisiCut.
 * 
 *     VisiCut is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Lesser General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 * 
 *    VisiCut is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Lesser General Public License for more details.
 * 
 *     You should have received a copy of the GNU Lesser General Public License
 *     along with VisiCut.  If not, see <http://www.gnu.org/licenses/>.
 **/
/*
 * MappingWizzardDialog.java
 *
 * Created on 20.09.2011, 20:24:12
 */
package com.t_oster.visicut.gui.mappingwizzard;

import com.t_oster.visicut.gui.mappingdialog.MatchingPartsPanel;
import com.t_oster.visicut.model.LaserProfile;
import com.t_oster.visicut.model.MaterialProfile;
import com.t_oster.visicut.model.graphicelements.GraphicSet;
import com.t_oster.visicut.model.mapping.FilterSet;
import com.t_oster.visicut.model.mapping.Mapping;
import com.t_oster.visicut.model.mapping.MappingFilter;
import com.t_oster.visicut.model.mapping.MappingSet;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author thommy
 */
public class MappingWizzardDialog extends javax.swing.JDialog implements ListSelectionListener
{

  protected GraphicSet graphicObjects = null;

  /**
   * Get the value of graphicObjects
   *
   * @return the value of graphicObjects
   */
  public GraphicSet getGraphicObjects()
  {
    return graphicObjects;
  }

  /**
   * Set the value of graphicObjects
   *
   * @param graphicObjects new value of graphicObjects
   */
  public void setGraphicObjects(GraphicSet graphicObjects)
  {
    this.graphicObjects = graphicObjects;
    this.mappingWizzardTable1.setObjects(graphicObjects);
    this.matchingPartsPanel1.setGraphicElements(graphicObjects);
  }
  protected MaterialProfile materialProfile = null;

  /**
   * Get the value of laserProfiles
   *
   * @return the value of laserProfiles
   */
  public MaterialProfile getMaterialProfile()
  {
    return materialProfile;
  }

  /**
   * Set the value of laserProfiles
   *
   * @param laserProfiles new value of laserProfiles
   */
  public void setMaterialProfile(MaterialProfile laserProfiles)
  {
    this.materialProfile = laserProfiles;
    this.mappingWizzardTable1.setLaserProfiles(laserProfiles.getLaserProfiles());
    this.matchingPartsPanel1.setMaterial(materialProfile);
  }
  protected String attribute = null;

  /**
   * Get the value of attribute
   *
   * @return the value of attribute
   */
  public String getAttribute()
  {
    return attribute;
  }

  /**
   * Set the value of attribute
   *
   * @param attribute new value of attribute
   */
  public void setAttribute(String attribute)
  {
    this.attribute = attribute;
    this.mappingWizzardTable1.setAttribute(attribute);
  }
  protected MappingSet mappingSet = null;

  /**
   * Get the value of MappingSet
   *
   * @return the value of MappingSet
   */
  public MappingSet getMappingSet()
  {
    return mappingSet;
  }

  /**
   * Set the value of MappingSet
   *
   * @param mappingSet new value of MappingSet
   */
  public void setMappingSet(MappingSet mappingSet)
  {
    if (this.mappingSet == null && mappingSet != null)
    {//Just if setting the mappingSet for first time, try to parse it
      for (Mapping m : mappingSet)
      {
        if (m.getFilterSet().size() == 1)
        {
          if (this.attribute.equals(m.getFilterSet().getFirst().getAttribute()))
          {
            Object value = m.getFilterSet().getFirst().getValue();
            this.mappingWizzardTable1.setProfileForValue(value, this.materialProfile.getLaserProfile(m.getProfileName()));
          }
        }
      }
    }
    this.mappingSet = mappingSet;
  }

  /** Creates new form MappingWizzardDialog */
  public MappingWizzardDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    this.mappingWizzardTable1.getSelectionModel().addListSelectionListener(this);
    //To get changes of the selected LaserProfile
    this.mappingWizzardTable1.getModel().addTableModelListener(new TableModelListener()
    {

      public void tableChanged(TableModelEvent tme)
      {
        MappingWizzardDialog.this.valueChanged(null);
      }
    });
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        mappingWizzardTable1 = new com.t_oster.visicut.gui.mappingwizzard.MappingWizzardTable();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        matchingPartsPanel1 = new com.t_oster.visicut.gui.mappingdialog.MatchingPartsPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        mappingWizzardTable1.setName("mappingWizzardTable1"); // NOI18N
        jScrollPane1.setViewportView(mappingWizzardTable1);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.t_oster.visicut.gui.VisicutApp.class).getContext().getResourceMap(MappingWizzardDialog.class);
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setName("jPanel1"); // NOI18N

        matchingPartsPanel1.setName("matchingPartsPanel1"); // NOI18N
        matchingPartsPanel1.setPreviewMode(true);
        matchingPartsPanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                matchingPartsPanel1PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout matchingPartsPanel1Layout = new javax.swing.GroupLayout(matchingPartsPanel1);
        matchingPartsPanel1.setLayout(matchingPartsPanel1Layout);
        matchingPartsPanel1Layout.setHorizontalGroup(
            matchingPartsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );
        matchingPartsPanel1Layout.setVerticalGroup(
            matchingPartsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 343, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(matchingPartsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(3, 3, 3)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(matchingPartsPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jProgressBar1.setName("jProgressBar1"); // NOI18N

        jCheckBox1.setText(resourceMap.getString("jCheckBox1.text")); // NOI18N
        jCheckBox1.setName("jCheckBox1"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, matchingPartsPanel1, org.jdesktop.beansbinding.ELProperty.create("${previewMode}"), jCheckBox1, org.jdesktop.beansbinding.BeanProperty.create("selected"), "prevmode");
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addGap(18, 18, 18)
                        .addComponent(okButton))
                    .addComponent(jLabel1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancelButton)
                        .addComponent(okButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jCheckBox1)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
  {//GEN-HEADEREND:event_cancelButtonActionPerformed
    this.setMappingSet(null);
    this.setVisible(false);
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
  {//GEN-HEADEREND:event_okButtonActionPerformed
    this.setMappingSet(this.mappingWizzardTable1.getMappingSet());
    this.setVisible(false);
  }//GEN-LAST:event_okButtonActionPerformed

  private void matchingPartsPanel1PropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_matchingPartsPanel1PropertyChange
  {//GEN-HEADEREND:event_matchingPartsPanel1PropertyChange
    if (evt.getPropertyName().equals(MatchingPartsPanel.PROP_RENDERINGPROGRESS))
    {
      this.jProgressBar1.setIndeterminate(this.matchingPartsPanel1.getRenderingProgress() != 100);
    }
  }//GEN-LAST:event_matchingPartsPanel1PropertyChange
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.t_oster.visicut.gui.mappingwizzard.MappingWizzardTable mappingWizzardTable1;
    private com.t_oster.visicut.gui.mappingdialog.MatchingPartsPanel matchingPartsPanel1;
    private javax.swing.JButton okButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

  public void valueChanged(ListSelectionEvent lse)
  {
    int row = this.mappingWizzardTable1.getSelectedRow();
    Object value = this.mappingWizzardTable1.getValueAt(row, 0);
    LaserProfile profile = (LaserProfile) this.mappingWizzardTable1.getValueAt(row, 1);
    FilterSet fs = new FilterSet();
    fs.add(new MappingFilter(this.attribute, value));
    if (profile == null)
    {
      this.matchingPartsPanel1.setSelectedFilterSet(fs);
    }
    else
    {
      this.matchingPartsPanel1.setSelectedMapping(new Mapping(fs, profile.getName()));
    }
  }
}
