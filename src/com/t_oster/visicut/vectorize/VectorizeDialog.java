/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.t_oster.visicut.vectorize;

import com.kitfox.svg.SVGUniverse;
import com.t_oster.uicomponents.ImagePanel;
import com.t_oster.visicut.Preferences;
import com.t_oster.visicut.managers.PreferencesManager;
import com.t_oster.visicut.misc.DialogHelper;
import com.t_oster.visicut.misc.FileUtils;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author Thomas Oster <thomas.oster@rwth-aachen.de>
 */
public class VectorizeDialog extends javax.swing.JDialog
{
  
  private DialogHelper dialog;
  private File tmpResult = FileUtils.getNonexistingWritableFile("vectorize.svg");
  private File tmpBitmap = FileUtils.getNonexistingWritableFile("vectorize1.bmp");
  private File tmpBitmap2 = FileUtils.getNonexistingWritableFile("vectorize.bmp");
  
  /**
   * Creates new form VectorizeDialogForm
   */
  public VectorizeDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    tmpResult.deleteOnExit();
    tmpBitmap.deleteOnExit();
    dialog = new DialogHelper(this, "Vectorize");
    
  }
  
  private void drawFile(File f, ImagePanel p)
  {
    try
    {
      BufferedImage img = ImageIO.read(f);
      p.setImage(img);
    }
    catch (IOException ex)
    {
      dialog.showErrorMessage(ex);
    }
  }
  
  private File inputFile = null;
  public static final String PROP_INPUTFILE = "inputFile";

  public File getInputFile()
  {
    return inputFile;
  }

  public void setInputFile(File inputFile)
  {
    File oldInputFile = this.inputFile;
    this.inputFile = inputFile;
    this.drawFile(inputFile, inputPanel);
    firePropertyChange(PROP_INPUTFILE, oldInputFile, inputFile);
  }

  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    btOk = new javax.swing.JToggleButton();
    btCancel = new javax.swing.JButton();
    jSlider1 = new javax.swing.JSlider();
    jLabel1 = new javax.swing.JLabel();
    btUpdate = new javax.swing.JButton();
    inputPanel = new com.t_oster.uicomponents.ImagePanel();
    svgPanel = new com.kitfox.svg.app.beans.SVGPanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/t_oster/visicut/vectorize/resources/VectorizeDialog"); // NOI18N
    btOk.setText(bundle.getString("OK")); // NOI18N
    btOk.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btOkActionPerformed(evt);
      }
    });

    btCancel.setText(bundle.getString("CANCEL")); // NOI18N
    btCancel.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btCancelActionPerformed(evt);
      }
    });

    jSlider1.setMaximum(255);

    jLabel1.setText(bundle.getString("TRESHOLD")); // NOI18N

    btUpdate.setText(bundle.getString("UPDATE")); // NOI18N
    btUpdate.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btUpdateActionPerformed(evt);
      }
    });

    inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("INPUT"))); // NOI18N

    javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
    inputPanel.setLayout(inputPanelLayout);
    inputPanelLayout.setHorizontalGroup(
      inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 225, Short.MAX_VALUE)
    );
    inputPanelLayout.setVerticalGroup(
      inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 190, Short.MAX_VALUE)
    );

    svgPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("PREVIEW"))); // NOI18N
    svgPanel.setAntiAlias(true);
    svgPanel.setScaleToFit(true);

    javax.swing.GroupLayout svgPanelLayout = new javax.swing.GroupLayout(svgPanel);
    svgPanel.setLayout(svgPanelLayout);
    svgPanelLayout.setHorizontalGroup(
      svgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );
    svgPanelLayout.setVerticalGroup(
      svgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(svgPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(btCancel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btOk))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
            .addGap(18, 18, 18)
            .addComponent(btUpdate)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(svgPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel1)
          .addComponent(btUpdate))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btOk)
          .addComponent(btCancel))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btCancelActionPerformed
  {//GEN-HEADEREND:event_btCancelActionPerformed
    tmpResult = null;
    this.dispose();
  }//GEN-LAST:event_btCancelActionPerformed

  public File getResult()
  {
    return tmpResult;
  }
  
  private static String[] supportedFileTypes = new String[]{"jpg","png","bmp"};
  
  public static boolean supportsFileType(File f)
  {
    for (String e : supportedFileTypes)
    {
      if (f.getName().toLowerCase().endsWith(e))
      {
        return true;
      }
    }
    return false;
  }
  
  private void runProgram(String[] cmd) throws IOException, InterruptedException
  {
    Runtime run = Runtime.getRuntime() ;
    Process pr = run.exec(cmd);
    String error = "";
    try
    {
      int r;
      while ((r = pr.getErrorStream().read()) >= 0)
      {
        error += (char) r;
      }
    }
    catch (IOException e)
    {
      
    }
    pr.waitFor();
    if (!"".equals(error))
    {
      throw new IOException("Errors:"+error);
    }
  }
  
  private void doVectorize() throws IOException, InterruptedException
  {
    Preferences p = PreferencesManager.getInstance().getPreferences();
    BufferedImage in = ImageIO.read(inputFile);
    //copy the input to an RGB image, otherwise creating BMP can fail
    BufferedImage out = new BufferedImage(in.getWidth(), in.getHeight(), BufferedImage.TYPE_INT_RGB);
    Graphics2D g = out.createGraphics();
    g.drawImage(in, 0, 0, null);
    g.dispose();
    ImageIO.write(out, "BMP", tmpBitmap);
    double treshold = this.jSlider1.getValue() / (double) this.jSlider1.getMaximum();
    //convert bitmap to black-white
    String[] mkbitmap = new String[]{p.getMkbitmapPath(), "-t", ""+treshold, "-o", tmpBitmap2.getAbsolutePath(), tmpBitmap.getAbsolutePath()};
    runProgram(mkbitmap);
    //convert black white bitmap to svg
    String[] potrace = new String[]{p.getPotracePath(), "-b", "svg", "-o", tmpResult.getAbsolutePath(), tmpBitmap2.getAbsolutePath()} ;
    runProgram(potrace);
  }
  
  private void btUpdateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btUpdateActionPerformed
  {//GEN-HEADEREND:event_btUpdateActionPerformed
    try
    {
      doVectorize();
      SVGUniverse u = new SVGUniverse();
      svgPanel.setSvgUniverse(u);
      svgPanel.setSvgURI(u.loadSVG(new FileInputStream(tmpResult), tmpResult.getName()));
      svgPanel.repaint();
    }
    catch (Exception ex)
    {
      dialog.showErrorMessage(ex);
    }
  }//GEN-LAST:event_btUpdateActionPerformed

  private void btOkActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btOkActionPerformed
  {//GEN-HEADEREND:event_btOkActionPerformed
    try
    {
      this.doVectorize();
      tmpBitmap.delete();
      tmpBitmap2.delete();
      this.dispose();
    }
    catch (Exception ex)
    {
      tmpResult = null;
      dialog.showErrorMessage(ex);
    }
    
  }//GEN-LAST:event_btOkActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btCancel;
  private javax.swing.JToggleButton btOk;
  private javax.swing.JButton btUpdate;
  private com.t_oster.uicomponents.ImagePanel inputPanel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JSlider jSlider1;
  private com.kitfox.svg.app.beans.SVGPanel svgPanel;
  // End of variables declaration//GEN-END:variables
}
